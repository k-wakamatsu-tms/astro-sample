---
import type { Counselor } from "../types/counselor";
import { counselors } from "../data/counselors";
import CounselorCard from "./CounselorCard.astro";

interface Props {
	prefecture?: string;
	region?: string;
	keyword?: string;
}

const { prefecture, region, keyword } = Astro.props;

const filteredCounselors = counselors.filter((counselor: Counselor) => {
	if (prefecture && counselor.prefecture !== prefecture) return false;
	if (region && counselor.region !== region) return false;
	if (keyword) {
		const searchText =
			`${counselor.name} ${counselor.description} ${counselor.prefecture} ${counselor.region}`.toLowerCase();
		if (!searchText.includes(keyword.toLowerCase())) return false;
	}
	return true;
});
---

<div class="mt-10">
	{filteredCounselors.length > 0 ? (
		<div class="grid grid-cols-1 gap-x-6 gap-y-10 sm:grid-cols-2 lg:grid-cols-3 xl:gap-x-8">
			{filteredCounselors.map((counselor) => (
				<CounselorCard {...counselor} />
			))}
		</div>
	) : (
		<div class="text-center py-12">
			<p class="text-lg text-gray-600">
				条件に一致する相談所が見つかりませんでした。<br />
				検索条件を変更してお試しください。
			</p>
		</div>
	)}
</div> 